<?php

/**
 * Implementation of hook_theme().
 */
function cbisnode_theme() {
  $theme = array(
    'cbis_product' => array(
      'template' => 'cbis_product',
      'preprocess functions' => array('cbisimport_preprocess_cbis_product'),
      'arguments' => array(
        'product' => NULL,
      ),
    ),
    'cbis_product_address' => array(
      'template' => 'cbis_product_address',
      'arguments' => array(
        'attributes' => NULL,
      ),
    ),
  );
  return $theme;
}

/**
 * Add template suggestions based on the CBIS template.
 *
 * @param array $vars
 * @return array
 */
function cbisnode_preprocess_cbis_product($vars) {
  if (is_array($vars['product']['TemplateParents'])) {
    foreach ($vars['product']['TemplateParents'] as $t) {
      $vars['template_files'][] = 'cbis_product_' . $t['id'];
    }
  }
  $vars['template_files'][] = 'cbis_product_' . $vars['product']['TemplateId'];
  return $vars;
}

/**
 * Implementation of hook_cbisimport_saving_product().
 */
function cbisnode_cbisimport_saving_product($info) {
  global $user;
  $product = $info->product;
  $template = CbisTemplate::getTemplate($product['TemplateId']);
  $type = $template->isInstanceOf(81) ? 'event' : 'location';
  $tags = array();
  foreach (cbisimport_array($product['Categories']->Category) as $category) {
    if (cbisimport_category_is_instance_of($category, 2457) || cbisimport_category_is_instance_of($category, 2395)) { // Event
      $type = 'event';
    }
    $tags = array_merge($tags, cbisimport_category_tags($category->Id, 2));//$product['LanguageId']));
  }

  $attr = $product['Attributes'];
  $node = array(
    'type' => $type,
    'title' => $product['Name'],
    'created' => $product['PublishedDate'],
    'teaser' => $attr['Introduction'],
    'body' => theme('cbis_product', $product),
    'uid' => $user->uid,
    'language' => cbisimport_language_code($product['LanguageId']),
    'taxonomy' => array(
      'tags' => array(
        '1' => join(', ', $tags),
      )
    ),
  );

  if (module_exists('simple_geo')) {
    if (!empty($attr['Latitude'])) {
      $node['simple_geo_position'] = sprintf('%s %s', $attr['Latitude'], $attr['Longitude']);
    }
  }

  $node['nid'] = cbisimport_mapping_exists($info);

  switch ($type) {
    case 'event':
      $has_occasions = FALSE;
      foreach ($info->product['Occasions'] as $occasion) {
        $has_occasions = $has_occasions || !empty($occasion->Expanded);
      }
      if ($has_occasions) {
        if (!$node['nid']) {
          cbisnode_api_create_event($node, $info);
        }
        else {
          cbisnode_api_update_event($node, $info);
        }
      }
      break;
    case 'location':
      $node['nid'] = cbisimport_mapping_exists($info);
      if (!$node['nid']) {
        cbisnode_api_create_info($node, $info);
      }
      else {
        cbisnode_api_update_info($node, $info);
      }
      break;
    case 'post':
      $node['nid'] = cbisimport_mapping_exists($info);
      if (!$node['nid']) {
        cbisnode_api_create_post($node, $info);
      }
      else {
        cbisnode_api_update_post($node, $info);
      }
      break;
  }

  // TODO: Delete stuff that've been removed.
}

function cbisnode_api_create_post($node_data, $info) {
  $node = (object)$node_data;

  module_invoke_all('cbisnode_api_before_create_post', $node, $info, $occasion, $interval);
  module_invoke_all('cbisnode_api_before_post_save', $node, $info, $occasion, $interval);
  node_save($node);
  module_invoke_all('cbisnode_api_after_create_post', $node, $info, $occasion, $interval);
  module_invoke_all('cbisnode_api_post_saved', $node, $info, $occasion, $interval);

  cbisimport_mapping_add($info->product['Id'], $info->product['LanguageId'], $node->nid, $occasion->Id, $interval[0]);
}

function cbisnode_api_update_post($node_data, $info) {
  $current = get_object_vars(node_load($node_data['nid']));
  $node = (object)array_merge($current, $node_data);

  module_invoke_all('cbisnode_api_before_update_post', $node, $info, $occasion, $interval);
  module_invoke_all('cbisnode_api_before_post_save', $node, $info, $occasion, $interval);
  node_save($node);
  module_invoke_all('cbisnode_api_after_update_post', $node, $info, $occasion, $interval);
  module_invoke_all('cbisnode_api_post_saved', $node, $info, $occasion, $interval);
}

function cbisnode_api_create_event($node_data, $info) {
  $node = (object)$node_data;

  module_invoke_all('cbisnode_api_before_create_event', $node, $info, $occasion, $interval);
  module_invoke_all('cbisnode_api_before_event_save', $node, $info, $occasion, $interval);
  node_save($node);
  module_invoke_all('cbisnode_api_after_create_event', $node, $info, $occasion, $interval);
  module_invoke_all('cbisnode_api_event_saved', $node, $info, $occasion, $interval);

  cbisimport_mapping_add($info->product['Id'], $info->product['LanguageId'], $node->nid, $occasion->Id, $interval[0]);
}

function cbisnode_api_update_event($node_data, $info) {
  $current = get_object_vars(node_load($node_data['nid']));
  $node = (object)array_merge($current, $node_data);

  module_invoke_all('cbisnode_api_before_update_event', $node, $info, $occasion, $interval);
  module_invoke_all('cbisnode_api_before_event_save', $node, $info, $occasion, $interval);
  node_save($node);
  module_invoke_all('cbisnode_api_after_update_event', $node, $info, $occasion, $interval);
  module_invoke_all('cbisnode_api_event_saved', $node, $info, $occasion, $interval);
}

function cbisnode_api_create_info($node_data, $info) {
  $node = (object)$node_data;

  module_invoke_all('cbisnode_api_before_create_info', $node, $info);
  module_invoke_all('cbisnode_api_before_info_save', $node, $info);
  node_save($node);
  module_invoke_all('cbisnode_api_after_create_info', $node, $info);
  module_invoke_all('cbisnode_api_info_saved', $node, $info);

  cbisimport_mapping_add($info->product['Id'], $info->product['LanguageId'], $node->nid, 0, 0);
}

function cbisnode_api_update_info($node_data, $info) {
  $current = get_object_vars(node_load($node_data['nid']));
  $node = (object)array_merge($current, $node_data);

  module_invoke_all('cbisnode_api_before_create_info', $node, $info);
  module_invoke_all('cbisnode_api_before_info_save', $node, $info);
  node_save($node);
  module_invoke_all('cbisnode_api_after_create_info', $node, $info);
  module_invoke_all('cbisnode_api_info_saved', $node, $info);
}
